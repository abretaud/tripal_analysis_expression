<?php
/**
 * @file
 * Functions used to install the analysis: expression module.
 */

/**
 * Implements hook_requirements().
 *
 * @ingroup tripal_analysis_expression
 */
function tripal_analysis_expression_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    // Make sure chado is installed.
    if (!$GLOBALS["chado_is_installed"]) {
      $requirements['tripal_analysis_expression'] = [
        'title' => "tripal_analysis_expression",
        'value' => "ERROR: Chado must be installed before this module can be enabled",
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements install_hook().
 *
 * Permforms actions when the module is first installed.
 *
 * @ingroup tripal_analysis_module
 */
function tripal_analysis_expression_install() {

  // Get localization function for installation.
  $t = get_t();

  // Register the analysis.
  tripal_register_analysis_child('tripal_analysis_expression');

  // These variables are used to set how expression information is displayed.
  variable_set('chado_feature_expression_hide_expression', 0);
  variable_set('chado_feature_expression_hide_biomaterial_labels', 0);
  variable_set('chado_feature_expression_limit_label_length', 0);
  variable_set('chado_feature_expression_min_num_biomaterials', 0);
  variable_set('chado_feature_expression_expression_display', 'column');
  variable_set('chado_feature_expression_biomaterial_display_width', 15);
}

/**
 * Implements hook_uninstall().
 *
 * @ingroup tripal_analysis_expression
 */
function tripal_analysis_expression_uninstall() {
  /*
    // Get localization function for installation.
    $t = get_t();

    // Unregister the analysis.
    tripal_unregister_analysis_child('tripal_analysis_expression');
  */
}

/**
 * Add heatmap variables.
 */
function tripal_analysis_expression_update_7201() {
  variable_set('tripal_analysis_expression_heatmap_placeholder', 'Example: orange1.1g022520m, orange1.1g022799m');
  variable_set('tripal_analysis_expression_heatmap_example', 'orange1.1g022520m, orange1.1g022799m, orange1.1g022520m, orange1.1g022799m');
}

/**
 * Add expression feature materialized view
 */
function tripal_analysis_expression_update_7203() {
  $mv_name = 'expression_feature';
  $comment = 'Store list of features that have expression data';
  $schema = [
    'table' => $mv_name,
    'description' => $comment,
    'fields' => [
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'organism_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'feature_uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'organism_common_name' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'accession' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ],
    ],
    'indexes' => [
      'expression_feature_feature_id_index' => ['feature_id'],
      'expression_feature_organism_id_index' => ['organism_id'],
      'expression_feature_feature_uniquename_index' => ['feature_uniquename'],
      'expression_feature_organism_common_name_index' => ['organism_common_name'],
      'expression_feature_accession_index' => ['accession'],
    ],
  ];

  $sql = 'SELECT DISTINCT (F.feature_id) AS feature_id,
                O.organism_id AS organism_id,
                F.uniquename AS feature_uniquename,
                O.common_name AS organism_common_name,
                DXR.accession AS accession
            FROM {feature} F
            INNER JOIN {organism} O ON F.organism_id = O.organism_id
            INNER JOIN {element} E ON E.feature_id = F.feature_id
            INNER JOIN {elementresult} ER ON ER.element_id = E.element_id
            INNER JOIN {quantification} Q ON Q.quantification_id = ER.quantification_id
            INNER JOIN {acquisition} AC ON AC.acquisition_id = Q.acquisition_id
            INNER JOIN {assay} A ON A.assay_id = AC.assay_id
            INNER JOIN {assay_biomaterial} AB ON AB.assay_id = A.assay_id
            INNER JOIN {biomaterial} B ON B.biomaterial_id = AB.biomaterial_id
            LEFT JOIN {feature_cvterm} FC ON F.feature_id = FC.feature_id
            LEFT JOIN {cvterm} CVT ON CVT.cvterm_id = FC.cvterm_id
            LEFT JOIN {dbxref} DXR ON DXR.dbxref_id = CVT.dbxref_id';

  tripal_add_mview($mv_name, 'tripal_analysis_expression', $schema, $sql, $comment);
}

/**
 * Set default value for elasticsearch dependency.
 */
function tripal_analysis_expression_update_7204() {
  variable_set('analysis_expression_heatmap_db', 'mview');
}